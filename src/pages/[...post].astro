---
import MainLayout from "@/layouts/MainLayout.astro";
import PostHeader from "@/components/PostHeader.astro";
import PostHeaderBox from "@/components/PostHeaderBox.astro";
import PostBody from "@/components/PostBody.astro";
import PostFooter from "@/components/PostFooter.astro";
import { siteConfig } from "@/config";
import { orderByDateDesc } from "@/lib/sort";
import { getBanner } from "@/lib/bannerHelper";

export async function getStaticPaths() {
  const allPosts = await Astro.glob("/src/posts/**/*.md");
  const sortedPosts = orderByDateDesc(allPosts);
  return sortedPosts.map((post, index) => {
    return {
      params: { post: post.frontmatter.slug },
      props: {
        post,
        prevPost: allPosts[index + 1],
        nextPost: allPosts[index - 1],
      },
    };
  });
}

const bannerImage = await getBanner(Astro.url.pathname);
const { post, prevPost, nextPost } = Astro.props;
const { Content } = post;
const postMainTag = post.frontmatter.tags?.[0];
---

<MainLayout
  title={post.frontmatter.title}
  description={post.frontmatter.abstract}
>
  <link rel="preload" href={bannerImage?.src} as="image" slot="head" />
  <progress-bar-element>
    <div id="progress-container" class="progress-container">
      <span id="progress-bar" class="progress-bar"></span>
    </div>
  </progress-bar-element>
  <PostHeader bannerImage={bannerImage}>
    <PostHeaderBox
      postTitle={post.frontmatter.title}
      postMainTag={postMainTag}
      postUpdateAt={post.frontmatter.createAt}
      author={siteConfig.author}
      avatarUrl="/favicon.svg"
    />
  </PostHeader>
  <article>
    <div class="content">
      <PostBody>
        <Content />
      </PostBody>
      <PostFooter
        tags={post.frontmatter.tags}
        prevPost={prevPost}
        nextPost={nextPost}
      />
    </div>
  </article>
</MainLayout>
<script>
  class AstroElement extends HTMLElement {
    constructor() {
      super();
      let progressBar = document.getElementById("progress-bar");
      document.addEventListener("scroll", (event) => {
        let percentage =
          (document.documentElement.scrollTop /
            (document.documentElement.scrollHeight -
              200 -
              window.innerHeight)) *
          100;
        progressBar.style.width = `${percentage}%`;
        if (percentage < 100) {
          progressBar.style.display = "block";
          document
            .getElementById("progress-container")
            .classList.remove("complete");
        } else {
          progressBar.style.display = "none";
          document
            .getElementById("progress-container")
            .classList.add("complete");
        }
      });
    }
  }
  customElements.define("progress-bar-element", AstroElement);
</script>
<style>
  .progress-container {
    position: fixed;
    top: 0;
    left: 0;
    height: 4px;
    width: 100%;
    z-index: 1024;
    transition: all ease-out 0.2s;
  }
  .progress-bar {
    display: block;
    height: 3px;
    width: 0;
    background: var(--color-accent);
  }
  .complete {
    transform: translateY(-4px);
  }
</style>
